name: Flutter CI/CD

on:
  push:
    branches: [ master, test-flight ]
  pull_request:
    branches: [ master ]

jobs:
  deploy-test-flight:
    if: github.ref == 'refs/heads/test-flight'
    name: Build & Upload iOS to TestFlight
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Decode GoogleService-Info.plist
        run: |
          mkdir -p ios/Runner
          echo "${{ secrets.FIREBASE_GOOGLE_PLIST }}" | base64 --decode > ios/Runner/GoogleService-Info.plist

      - name: Decode firebase_options.dart
        run: |
          mkdir -p lib
          echo "${{ secrets.FIREBASE_DART_OPTIONS }}" | base64 --decode > lib/firebase_options.dart

      - name: Install CocoaPods
        run: |
          cd ios
          pod install
        shell: bash

      #      - name: Analyze project
      #        run: flutter analyze
      #
      #      - name: Run tests
      #        run: flutter test

      - name: Import signing certificate (.p12)
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_P12_PASSWORD }}

      - name: Create provisioning profile from base64
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles/        
          echo "${{ secrets.PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/Appstore_cooki_with_signin.mobileprovision

      - name: Debug provisioning profile
        run: |
          echo "=== Installed profiles ==="
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
          
          echo "=== Profile contents ==="
          security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/Appstore_cooki_with_signin.mobileprovision | head -50
          
          echo "=== Xcode can see these profiles ==="
          security find-identity -v -p codesigning
          
          echo "=== Profile UUID ==="
          security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/Appstore_cooki_with_signin.mobileprovision | grep -A1 "UUID"

      - name: Install Fastlane
        run: gem install fastlane -NV

      - name: Build & Submit via Fastlane
        working-directory: ios
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APPSTORE_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_PRIVATE_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        run: |
          fastlane beta

#  test:
#    if: github.ref == 'refs/heads/master' || github.event_name == 'pull_request'
#    name: Run tests
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.29.2'
#          channel: 'stable'
#
#      - name: Install dependencies
#        run: flutter pub get
#
#      - name: Create empty .env file
#        run: echo "" > .env
#
#      - name: Decode google-services.json
#        run: |
#          echo "${{ secrets.FIREBASE_GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json
#
#      - name: Decode GoogleService-Info.plist
#        run: |
#          mkdir -p ios/Runner
#          echo "${{ secrets.FIREBASE_GOOGLE_PLIST }}" | base64 --decode > ios/Runner/GoogleService-Info.plist
#
#      - name: Decode firebase_options.dart
#        run: |
#          mkdir -p lib
#          echo "${{ secrets.FIREBASE_DART_OPTIONS }}" | base64 --decode > lib/firebase_options.dart
#
#      - name: Analyze project
#        run: flutter analyze
#
#      - name: Run tests
#        run: flutter test
